// Copyright 2024 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// https://state-machine-cat.js.org/
// Use the following as input to above state-machine generator

// pdc_power_mgmt state diagram

INIT: {
	WAIT_FOR_READY,
	SET_SINK_PDOS,
	GET_CONNECTOR_STATUS;

  	WAIT_FOR_READY => SET_SINK_PDOS;
  	SET_SINK_PDOS=>GET_CONNECTOR_STATUS;
  	GET_CONNECTOR_STATUS=>UNATTACHED_SET_SINK_PATH_OFF;

},
# We can move back to this state from any state
# if connector status indicates port not connected
UNATTACHED: {
  	UNATTACHED_SET_SINK_PATH_OFF,
	UNATTACHED_RUN;

  	UNATTACHED_SET_SINK_PATH_OFF => UNATTACHED_RUN;
  	UNATTACHED_RUN => SNK_ATTACHED_GET_CONNECTOR_CAPABILITY;
  	UNATTACHED_RUN => SRC_ATTACHED_SET_SINK_PATH_OFF;
  	UNATTACHED_RUN => SRC_TYPEC_ATTACHED_SET_SINK_PATH_OFF;
  	UNATTACHED_RUN => SNK_TYPEC_ATTACHED_DEBOUNCE;

},
SNK_ATTACHED: {
	SNK_ATTACHED_GET_CONNECTOR_CAPABILITY,
	SNK_ATTACHED_GET_CABLE_PROPERTY,
	SNK_ATTACHED_SET_DR_SWAP_POLICY,
	SNK_ATTACHED_SET_PR_SWAP_POLICY,
	SNK_ATTACHED_READ_POWER_LEVEL,
	SNK_ATTACHED_DISABLE_FRS,
	SNK_ATTACHED_GET_PDOS,
	SNK_ATTACHED_GET_VDO,
	SNK_ATTACHED_GET_RDO,
	SNK_ATTACHED_SET_SINK_PATH,
	SNK_ATTACHED_EVALUATE_PDOS,
	SNK_ATTACHED_START_CHARGING,
	SNK_ATTACHED_GET_SINK_PDO,
	SNK_ATTACHED_RUN;

	SNK_ATTACHED_GET_CONNECTOR_CAPABILITY=>SNK_ATTACHED_GET_CABLE_PROPERTY;
	SNK_ATTACHED_GET_CABLE_PROPERTY=>SNK_ATTACHED_SET_DR_SWAP_POLICY;
	SNK_ATTACHED_SET_DR_SWAP_POLICY=>SNK_ATTACHED_SET_PR_SWAP_POLICY;
	SNK_ATTACHED_SET_PR_SWAP_POLICY=>SNK_ATTACHED_READ_POWER_LEVEL;
	SNK_ATTACHED_READ_POWER_LEVEL=>SNK_ATTACHED_DISABLE_FRS;
	SNK_ATTACHED_DISABLE_FRS=>SNK_ATTACHED_GET_VDO;
	SNK_ATTACHED_GET_VDO=>SNK_ATTACHED_GET_PDOS;
	SNK_ATTACHED_GET_PDOS=>SNK_ATTACHED_EVALUATE_PDOS;
	SNK_ATTACHED_EVALUATE_PDOS=>SNK_ATTACHED_START_CHARGING;
	SNK_ATTACHED_START_CHARGING=>SNK_ATTACHED_GET_RDO;
	SNK_ATTACHED_GET_RDO=>SNK_ATTACHED_SET_SINK_PATH;
	SNK_ATTACHED_SET_SINK_PATH=>SNK_ATTACHED_GET_SINK_PDO;
	SNK_ATTACHED_GET_SINK_PDO=>SNK_ATTACHED_RUN;
	SNK_ATTACHED_SET_SINK_PATH=>SNK_ATTACHED_RUN;
	SNK_ATTACHED_RUN=>SNK_ATTACHED_SET_SINK_PATH : hard reset sent;

},
SRC_ATTACHED: {
	SRC_ATTACHED_SET_SINK_PATH_OFF,
	SRC_ATTACHED_GET_CONNECTOR_CAPABILITY,
	SRC_ATTACHED_GET_CABLE_PROPERTY,
	SRC_ATTACHED_SET_DR_SWAP_POLICY,
	SRC_ATTACHED_SET_PR_SWAP_POLICY,
	SRC_ATTACHED_READ_POWER_LEVEL,
	SRC_ATTACHED_GET_VDO,
	SRC_ATTACHED_RUN;

	SRC_ATTACHED_SET_SINK_PATH_OFF=>SRC_ATTACHED_GET_CONNECTOR_CAPABILITY;
	SRC_ATTACHED_GET_CONNECTOR_CAPABILITY=>SRC_ATTACHED_GET_CABLE_PROPERTY;
	SRC_ATTACHED_GET_CABLE_PROPERTY=>SRC_ATTACHED_SET_DR_SWAP_POLICY;
	SRC_ATTACHED_SET_DR_SWAP_POLICY=>SRC_ATTACHED_SET_PR_SWAP_POLICY;
	SRC_ATTACHED_SET_PR_SWAP_POLICY=>SRC_ATTACHED_READ_POWER_LEVEL;
	SRC_ATTACHED_READ_POWER_LEVEL=>SRC_ATTACHED_GET_VDO;
	SRC_ATTACHED_GET_VDO=>SRC_ATTACHED_RUN;
},
SRC_TYPEC_ONLY: {
	SRC_TYPEC_ATTACHED_SET_SINK_PATH_OFF,
	SRC_TYPEC_ATTACHED_DEBOUNCE,
	SRC_TYPEC_ATTACHED_ADD_SINK,
	SRC_TYPEC_READ_POWER_LEVEL,
	SRC_TYPEC_ATTACHED_RUN;

	SRC_TYPEC_ATTACHED_SET_SINK_PATH_OFF=>SRC_TYPEC_ATTACHED_DEBOUNCE;
	SRC_TYPEC_ATTACHED_DEBOUNCE=>SRC_TYPEC_ATTACHED_ADD_SINK;
	SRC_TYPEC_ATTACHED_ADD_SINK=>SRC_TYPEC_READ_POWER_LEVEL;
	SRC_TYPEC_READ_POWER_LEVEL=>SRC_TYPEC_ATTACHED_RUN;
},
SNK_TYPEC_ONLY: {
	SNK_TYPEC_ATTACHED_SET_CHARGE_CURRENT,
	SNK_TYPEC_ATTACHED_DEBOUNCE,
	SNK_TYPEC_READ_POWER_LEVEL,
	SNK_TYPEC_ATTACHED_RUN;

	SNK_TYPEC_ATTACHED_DEBOUNCE=>SNK_TYPEC_ATTACHED_SET_CHARGE_CURRENT;
	SNK_TYPEC_ATTACHED_SET_CHARGE_CURRENT=>SNK_TYPEC_READ_POWER_LEVEL;
	SNK_TYPEC_READ_POWER_LEVEL=>SNK_TYPEC_ATTACHED_RUN;
},

SEND_CMD_START,
SEND_CMD_WAIT,
SUSPEND;

initial=>WAIT_FOR_READY;
# We can enter SUSPEND from
# any state
SUSPEND=>WAIT_FOR_READY;
# All PDC requests pass through
# SEND_CMD_(START|WAIT)
# and return to previous state
SEND_CMD_START=>SEND_CMD_WAIT;
