/* Copyright 2023 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

/* Myst program common DTS includes */
#include "../adc.dtsi"
#include "../fan.dtsi"
#include "../generated.dtsi"
#include "../gpio.dtsi"
#include "../i2c.dtsi"
#include "../interrupts.dtsi"
#include "../keyboard.dtsi"
#include "../usbc.dtsi"

/* Myst project DTS includes*/
#include "led_pins.dtsi"
#include "led_policy.dtsi"
#include "motionsense.dtsi"

/* Myst overrides follow... */
/ {
	/* battery overrides */
	batteries {
		default_battery: lgc_ap19b8m {
			compatible = "lgc,ap19b8m", "battery-smart";
		};
		cosmx-2 {
			compatible = "cosmx,ap20cbl-2", "battery-smart";
		};
	};

	named-gpios {
		/* Unimplemented */
		gpio_ec_entering_rw: ec_entering_rw {
			enum-name = "GPIO_ENTERING_RW";
		};
		pch-sys-prwok {
			enum-name = "GPIO_PCH_SYS_PWROK";
		};
	};

	named-temp-sensors {
		compatible = "cros-ec,temp-sensors";
		soc-pct2075 {
			temp_host_high = <100>;
			temp_host_halt = <105>;
			temp_host_release_high = <80>;
			temp_host_release_halt = <80>;
			temp_fan_off = <35>;
			temp_fan_max = <70>;
			power-good-pin = <&gpio_pg_pwr_s5>;
			sensor = <&soc_pct2075>;
		};
		amb-pct2075 {
			power-good-pin = <&gpio_pg_pwr_s5>;
			sensor = <&amb_pct2075>;
		};
	};

	/*
	 * Note this is expected to vary per-board, so we keep it in the overlay
	 * files.
	 */
	myst-fw-config {
		compatible = "cros-ec,cbi-fw-config";

		form-factor {
			enum-name = "FW_FORM_FACTOR";
			start = <0>;
			size = <1>;

			ff-clamshell {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FF_CLAMSHELL";
				value = <0>;
			};
			ff-convertible {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FF_CONVERTIBLE";
				value = <1>;
				default;
			};
		};

		fingerprint {
			enum-name = "FW_FINGERPRINT";
			start = <1>;
			size = <2>;

			fp-disabled {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FP_DISABLED";
				value = <0>;
				default;
			};
			fp-uart {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FP_UART";
				value = <1>;
			};
			fp-spi {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FP_SPI";
				value = <2>;
			};
		};

		wlan {
			enum-name = "FW_WLAN";
			start = <3>;
			size = <2>;

			wlan-mt7922 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_WLAN_MT7922";
				value = <0>;
				default;
			};
			wlan-mt7925 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_WLAN_MT7925";
				value = <1>;
			};
		};

		wwan {
			enum-name = "FW_WWAN";
			start = <5>;
			size = <2>;

			wwan-disabled {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_WWAN_DISABLED";
				value = <0>;
				default;
			};
			wwan-fm101-gl {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_WWAN_FM101_GL";
				value = <1>;
			};
		};

		io-db {
			enum-name = "FW_IO_DB";
			start = <7>;
			size = <3>;

			io-db-none {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_IO_DB_NONE";
				value = <0>;
				default;
			};
			io-db-sku-a {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_IO_DB_SKU_A";
				value = <1>;
			};
			io-db-sku-b {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_IO_DB_SKU_B";
				value = <2>;
			};
		};

		kb-bl {
			enum-name = "FW_KB_BL";
			start = <10>;
			size = <1>;

			kb-bl-disabled {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_KB_BL_DISABLED";
				value = <0>;
				default;
			};
			kb-bl-enabled {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_KB_BL_ENABLED";
				value = <1>;
			};
		};

		storage {
			enum-name = "STORAGE_TYPE";
			start = <11>;
			size = <1>;

			storage-mmc {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "STORAGE_TYPE_MMC";
				value = <0>;
			};
			storage-nvme {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "STORAGE_TYPE_NVME";
				value = <1>;
				default;
			};
		};
	};

	/* Rotation matrices for motion sensors. */
	motionsense-rotation-ref {
		compatible = "cros-ec,motionsense-rotation-ref";
		lid_rot_ref: lid-rotation-ref {
			mat33 = <0 (-1) 0
				 1 0 0
				 0 0 1>;
		};

		lid_rot_ref1: lid-rotation-ref1 {
			mat33 = <0 1 0
				 (-1) 0 0
				 0 0 1>;
		};

		base_rot_ref: base-rotation-ref {
			mat33 = <0 1 0
				 (-1) 0 0
				 0 0 1>;
		};
	};

};
